{"version":3,"sources":["/build/app/src/app/services/spotify.services.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA2C;AAC3C,sCAAqC;AACrC,iCAA+B;AAG/B,IAAa,eAAe;IAMxB,yBAAoB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAAI,CAAC;IAEvC,8CAA8C;IAC1C,qCAAW,GAAX,UAAc,GAAU,EAAE,IAAe;QAAf,qBAAA,EAAA,eAAe;QACrC,IAAI,CAAC,SAAS,GAAG,0CAA0C,GAAG,GAAG;YACjE,0BAA0B,GAAG,IAAI,GAAG,YAAY,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAClE,CAAC;IAEL,oBAAoB;IAChB,mCAAS,GAAT,UAAY,EAAS;QACjB,IAAI,CAAC,SAAS,GAAG,qCAAqC,GAAG,EAAE,CAAC;QAC5D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACjE,CAAC;IAEL,oCAAoC;IAChC,mCAAS,GAAT,UAAY,QAAe;QACvB,IAAI,CAAC,SAAS,GAAG,qCAAqC,GAAG,QAAQ,GAAG,UAAU,CAAC;QAC/E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACjE,CAAC;IAEL,4BAA4B;IACxB,kCAAQ,GAAR,UAAW,EAAS;QAChB,IAAI,CAAC,QAAQ,GAAG,oCAAoC,GAAG,EAAE,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChE,CAAC;IACL,sBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,eAAe;IAD3B,iBAAU,EAAE;qCAOiB,WAAI;GANrB,eAAe,CAgC3B;AAhCY,0CAAe","file":"spotify.services.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class SpotifyServices {\n    private searchUrl:string;\n    private artistUrl:string;\n    private albumsUrl:string;\n    private albumUrl:string;\n\n    constructor(private _http:Http) { }\n\n//Query the search url to retrieve the artists\n    searchMusic ( str:string, type = 'artist' ) {\n        this.searchUrl = \"https://api.spotify.com/v1/search?query=\" + str +\n        '&offset=0&limit=20&type=' + type + '&market=US';\n         return this._http.get(this.searchUrl).map(res => res.json());\n    }\n\n//Grab the artist(s)\n    getArtist ( id:string ) {\n        this.artistUrl = 'https://api.spotify.com/v1/artists/' + id;\n        return this._http.get(this.artistUrl).map(res => res.json());\n    }\n\n//Grab the list of albums per artist\n    getAlbums ( artistId:string ) {\n        this.albumsUrl = 'https://api.spotify.com/v1/artists/' + artistId + '/albums/';\n        return this._http.get(this.albumsUrl).map(res => res.json());\n    }\n\n//Grab the album information\n    getAlbum ( id:string ) {\n        this.albumUrl = 'https://api.spotify.com/v1/albums/' + id;\n        return this._http.get(this.albumUrl).map(res => res.json());\n    }\n}"],"sourceRoot":"/src"}